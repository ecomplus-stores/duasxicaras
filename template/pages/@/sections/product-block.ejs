<div id="product-block" class="product-block my-4 mb-lg-5">
  <input type="hidden" name="maxQtdKit" value="<%= _.state.min_quantity%>">
  <div class="container">
    <section
      id="product"
      class="product"
      data-to-render="true"
      data-product-id="<%= _.state._id %>"
      data-sku="<%= _.state.sku %>"
    >
      <div id="product-dock">
        <!--
          `TheProduct` should be rendered (hydrated) here:
          https://developers.e-com.plus/storefront/@ecomplus/storefront-components/docs/TheProduct.html
        -->
      </div>

      <div class="row">
        <div class="col-12 col-md-6 mb-4">
          <!-- Picture(s) gallery will be inserted dynamically within `TheProduct` -->
          <% if (_.state.pictures) { %>
            <% const imgObj = _.ecomUtils.img(_.state, null, 'big') %>
            <% if (imgObj) { %>
              <div id="product-gallery">
                <picture class="product__picture">
                  <source
                    srcset="<%= _.ecomUtils.img(_.state).url %>"
                    type="image/webp"
                    media="(max-width: 399.98px)"
                  >
                  <source
                    srcset="<%= imgObj.url %>"
                    type="image/webp"
                    media="(min-width: 400px)"
                  >
                  <img
                    src="<%= imgObj.url.replace(/\.webp$/, '') %>"
                    alt="<%= imgObj.alt %>"
                  >
                </picture>
              </div>
            <% } %>
          <% } %>
          <!-- Custom additional code on bottom of images gallery -->
        </div>

        <div class="col">
          <h1 class="product__name mb-3">
            <%= _.ecomUtils.name(_.state) %>
          </h1>
          <div class="d-flex">
            <p class="product__sku">
              COD: <%= _.state.sku %>
            </p>
          </div>
          <p class="product__resume pb-4 mb-5">
            <%=  _.state.meta_description %>
          </p>
          
          <div class="specification__row row d-flex justify-content-start">
            <%
            const { specifications } = _.state
            
            if (specifications && specifications.metodo && specifications.metodo.length) {
            %>
            <div class="col-auto">
              <label class="d-block specification__title" for="<%= specifications.metodo[0].value %>">
                MÃ©todo
              </label>
              <span><i class="specification__ico metodo <%= specifications.metodo[0].value %>" style="background-image:url(/img/uploads/produto_<%= specifications.metodo[0].value %>.png)"></i><%= specifications.metodo[0].text %></span>
            </div>
           <% } 
           if (specifications && specifications.graudetorra && specifications.graudetorra.length) {
            %>
            <div class="col-auto">
              <label class="d-block specification__title" for="<%= specifications.graudetorra[0].value %>">
                Grau de Torra
              </label>
              <span><i class="specification__ico graudetorra <%= specifications.graudetorra[0].value %>"></i><%= specifications.graudetorra[0].text %></span>
            </div>
           <% } %>
          </div>
          
          <div id="product-actions">
            <div id="product-loading">
              <% if (_.state.available && _.state.visible && _.ecomUtils.inStock(_.state)) { %>
                <div class="product__price prices prices--big">
                  <strong class="prices__value">
                    <%= _.ecomUtils.formatMoney(_.ecomUtils.price(_.state)) %>
                  </strong>
                </div>
              <% } %>

              <% if (_.state.variations && _.state.variations.length) { %>
                <div data-slot="variations-info">
                  <!-- Custom info for products with variations, such as sizes table link -->
                </div>
              <% } %>

              
              <div class="spinner-border m-4" role="status">
                <span class="sr-only">Loading...</span>
              </div>

              <div class="product__buy">
                <button
                  type="button"
                  class="btn btn-lg btn-primary"
                  onclick="ecomCart.addProduct(storefront.context.body)"
                  <% if (_.state.variations && _.state.variations.length) { %>
                    disabled
                  <% } %>
                >
                  <div data-slot="buy-button-content">
                    <%= _.dictionary('buy') %>
                  </div>
                </button>
              </div>
            </div>
          </div>

          
          <!-- <% if (_.state.short_description) { %>
            <p class="product__info lead">
              <%= _.state.short_description %>
            </p>
          <% } %> -->
        </div>
      </div>

      

      <%- await include('@/helpers/widgets-append', {
        _, opt: {}, field: 'productSlots'
      }) %>
    </section>

    <%- await include('@/helpers/widgets-append', {
      _, opt: {}, field: 'productBlockAppend'
    }) %>
  </div>
</div>

<%
const productJsonLd = {
  '@context': 'http://schema.org',
  '@type': 'Product',
  sku: _.state.sku,
  description: _.state.short_description || _.state.meta_description || _.ecomUtils.name(_.state),
  name: _.ecomUtils.name(_.state),
  offers: {
    '@type': 'Offer',
    url: `https://${_.settings.domain}/${_.state.slug}`,
    availability: `${(_.ecomUtils.inStock(_.state) ? 'In' : 'OutOf')}Stock`,
    priceCurrency: _.settings.currency,
    price: _.ecomUtils.price(_.state),
    itemCondition: `http://schema.org/${(_.state.condition === 'new' ? 'New' : 'Used')}Condition`,
    seller: {
      '@type': 'Organization',
      name: _.settings.name || _.store.name
    }
  }
}
if (_.state.brands && _.state.brands[0]) {
  productJsonLd.brand = {
    '@type': 'Brand',
    name: _.state.brands[0].name
  }
}
if (_.state.pictures && _.state.pictures.length) {
  productJsonLd.image = _.ecomUtils.img(_.state, null, 'zoom').url
}
if (_.state.mpn && _.state.mpn[0]) {
  productJsonLd.mpn = _.state.mpn[0]
}
%>
<script type="application/ld+json"><%-
  JSON.stringify(productJsonLd)
%></script>
